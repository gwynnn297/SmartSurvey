import React, { useState } from "react";
import MainLayout from "../../layouts/MainLayout";
import "./OpenFeedbackPage.css";
// import { Search } from "lucide-react";

const mockResponses = [
  { id: 1, author: "Ng∆∞·ªùi tham gia 1", text: "D·ªãch v·ª• kh√° t·ªët nh∆∞ng gi√° h∆°i cao so v·ªõi th·ªã tr∆∞·ªùng. Nh√¢n vi√™n th√¢n thi·ªán v√† nhi·ªát t√¨nh.", time: "2 ph√∫t tr∆∞·ªõc" },
  { id: 2, author: "Ng∆∞·ªùi tham gia 2", text: "Nh√¢n vi√™n th√¢n thi·ªán, nh∆∞ng th·ªùi gian ch·ªù ƒë·ª£i h∆°i l√¢u. Hy v·ªçng s·∫Ω c·∫£i thi·ªán trong t∆∞∆°ng lai.", time: "5 ph√∫t tr∆∞·ªõc" },
  { id: 3, author: "·∫®n danh", text: "Ch·∫•t l∆∞·ª£ng s·∫£n ph·∫©m ·ªïn, giao h√†ng ƒë√∫ng h·∫πn. Tuy nhi√™n ·ª©ng d·ª•ng mobile ch·∫°y h∆°i ch·∫≠m.", time: "8 ph√∫t tr∆∞·ªõc" },
  { id: 4, author: "Ng∆∞·ªùi tham gia 4", text: "R·∫•t h√†i l√≤ng v·ªõi d·ªãch v·ª•. Nh√¢n vi√™n gi·∫£i quy·∫øt v·∫•n ƒë·ªÅ nhanh ch√≥ng v√† chuy√™n nghi·ªáp.", time: "12 ph√∫t tr∆∞·ªõc" },
];

const OpenFeedbackPage = () => {
  const [search, setSearch] = useState("");

  const filteredResponses = mockResponses.filter((r) =>
    r.text.toLowerCase().includes(search.toLowerCase())
  );

  return (
    <MainLayout>
      <div className="analysis-container">
        {/* HEADER */}
        <div className="analysis-header">
          <h1>Ph√¢n t√≠ch ph·∫£n h·ªìi m·ªü</h1>
          <p>Xem c√°c c√¢u tr·∫£ l·ªùi d·∫°ng vƒÉn b·∫£n v√† ph√¢n t√≠ch t·ª´ AI</p>

          {/* <div className="search-bar">
            <Search className="search-icon" />
            <input
              type="text"
              placeholder="T√¨m ki·∫øm trong ph·∫£n h·ªìi..."
              value={search}
              onChange={(e) => setSearch(e.target.value)}
            />
          </div> */}
        </div>

        {/* ORIGINAL RESPONSES */}
        <section className="response-section">
          <h2>üí¨ Ph·∫£n h·ªìi g·ªëc t·ª´ ng∆∞·ªùi tham gia</h2>
          <p className="response-count">{filteredResponses.length} ph·∫£n h·ªìi</p>
          <div className="response-list">
            {filteredResponses.map((r) => (
              <div key={r.id} className="response-card">
                <div className="response-author">
                  <div className="author-avatar">{r.author.charAt(0)}</div>
                  <div>
                    <strong>{r.author}</strong>
                    <p className="response-time">{r.time}</p>
                  </div>
                </div>
                <p className="response-text">{r.text}</p>
              </div>
            ))}
          </div>
        </section>

        {/* AI ANALYSIS */}
        <section className="ai-analysis">
          <h2>ü§ñ Ph√¢n t√≠ch AI</h2>

          <div className="ai-card">
            <h3>üß† T√≥m t·∫Øt √Ω ch√≠nh</h3>
            <p className="ai-summary">
              <span className="highlight">ch·ªù ƒë·ª£i l√¢u</span> v√†{" "}
              <span className="highlight">gi√° c·∫£ h∆°i cao</span>. Kh√°ch h√†ng mong mu·ªën{" "}
              <span className="highlight">c·∫£i thi·ªán ·ª©ng d·ª•ng mobile</span> v√†{" "}
              <span className="highlight">h·ªó tr·ª£ k·ªπ thu·∫≠t</span>.
            </p>
          </div>

          <div className="ai-card">
            <h3>üè∑Ô∏è T·ª´ kh√≥a ph·ªï bi·∫øn</h3>
            <div className="tag-list">
              {["d·ªãch v·ª• t·ªët", "nh√¢n vi√™n nhi·ªát t√¨nh", "th·ªùi gian ch·ªù", "gi√° c·∫£ cao", "·ª©ng d·ª•ng mobile", "h·ªó tr·ª£ k·ªπ thu·∫≠t", "ch·∫•t l∆∞·ª£ng"].map(
                (tag, idx) => (
                  <span key={idx} className="tag">
                    {tag}
                  </span>
                )
              )}
            </div>
          </div>

          <div className="ai-card">
            <h3>üìä C·ª•m t·ª´ ti√™u bi·ªÉu</h3>
            <div className="cluster-grid">
              <div className="cluster positive">
                <h4>‚úÖ T√≠ch c·ª±c</h4>
                <ul>
                  <li>"D·ªãch v·ª• r·∫•t t·ªët"</li>
                  <li>"Nh√¢n vi√™n th√¢n thi·ªán"</li>
                  <li>"Gi·∫£i quy·∫øt nhanh ch√≥ng"</li>
                </ul>
              </div>
              <div className="cluster negative">
                <h4>‚ö†Ô∏è C·∫ßn c·∫£i thi·ªán</h4>
                <ul>
                  <li>"Th·ªùi gian ch·ªù h∆°i l√¢u"</li>
                  <li>"Gi√° c·∫£ h∆°i cao"</li>
                  <li>"·ª®ng d·ª•ng mobile ch·∫≠m"</li>
                </ul>
              </div>
            </div>
          </div>

          <div className="ai-card">
            <h3>üí° G·ª£i √Ω h√†nh ƒë·ªông</h3>
            <ul className="action-list">
              <li>
                <b>∆Øu ti√™n cao:</b> R√∫t ng·∫Øn th·ªùi gian ch·ªù c·ªßa kh√°ch h√†ng t·∫°i ƒëi·ªÉm d·ªãch v·ª•.
              </li>
              <li>
                <b>Trung h·∫°n:</b> C·∫£i thi·ªán hi·ªáu nƒÉng ·ª©ng d·ª•ng mobile.
              </li>
              <li>
                <b>D√†i h·∫°n:</b> ƒê√°nh gi√° l·∫°i c·∫•u tr√∫c gi√° ƒë·ªÉ tƒÉng s·ª©c c·∫°nh tranh.
              </li>
            </ul>
          </div>
        </section>
      </div>
    </MainLayout>
  );
};

export default OpenFeedbackPage;
