import { apiClient } from './authService';

export const surveyService = {
    // L·∫•y t·ªïng quan dashboard
    getDashboardOverview: async () => {
        try {
            const response = await apiClient.get('/dashboard/overview');
            return response.data;
        } catch (error) {
            console.error('Get dashboard overview error:', error);
            throw error;
        }
    },

    // T·∫°o kh·∫£o s√°t m·ªõi - ch·ªâ t·∫°o survey, kh√¥ng t·∫°o questions
    createSurvey: async (data) => {
        try {
            console.log('Creating survey:', data);
            const response = await apiClient.post('/surveys', data);
            console.log('‚úÖ Survey created:', response.data);
            return response.data;
        } catch (error) {
            console.error('‚ùå Create survey error:', error);
            throw error;
        }
    },

    // L·∫•y danh s√°ch kh·∫£o s√°t v·ªõi ph√¢n trang
    getSurveys: async (page = 0, size = 10) => {
        try {
            const response = await apiClient.get('/surveys', {
                params: { page, size }
            });
            return response.data;
        } catch (error) {
            console.error('‚ùå Get surveys error:', error);
            throw error;
        }
    },

    // L·∫•y chi ti·∫øt kh·∫£o s√°t
    getSurveyById: async (surveyId) => {
        try {
            const response = await apiClient.get(`/surveys/${surveyId}`);
            return response.data;
        } catch (error) {
            console.error('‚ùå Get survey by id error:', error);
            throw error;
        }
    },

    // C·∫≠p nh·∫≠t kh·∫£o s√°t
    updateSurvey: async (surveyId, data) => {
        try {
            console.log(`üìù Updating survey ${surveyId}:`, data);
            const response = await apiClient.put(`/surveys/${surveyId}`, data);
            console.log('‚úÖ Survey updated:', response.data);
            return response.data;
        } catch (error) {
            console.error('‚ùå Update survey error:', error);
            throw error;
        }
    },

    // X√≥a kh·∫£o s√°t
    deleteSurvey: async (surveyId) => {
        try {
            const response = await apiClient.delete(`/surveys/${surveyId}`);
            return response.data;
        } catch (error) {
            console.error('‚ùå Delete survey error:', error);
            throw error;
        }
    },

    // L·∫•y danh m·ª•c kh·∫£o s√°t
    getCategories: async () => {
        try {
            const response = await apiClient.get('/categories');
            return response.data;
        } catch (error) {
            console.error('‚ùå Get categories error:', error);
            throw error;
        }
    }
};

export default surveyService;

